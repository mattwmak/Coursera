#BlueJ class context
comment0.target=BabyNames
comment0.text=\r\n\ Created\ by\ white\ on\ 11/19/15.\r\n
comment1.params=parser
comment1.target=void\ totalBirths(org.apache.commons.csv.CSVParser)
comment1.text=\r\n\ Print\ the\ number\ of\ unique\ girls\ names\ ,\ the\ number\ of\ unique\ boys\ names\ and\ the\ total\ names\ in\ the\ file\r\n\r\n\ @param\ parser\r\n
comment2.params=year\ name\ gender
comment2.target=int\ getRank(int,\ java.lang.String,\ java.lang.String)
comment2.text=\r\n\ This\ method\ returns\ the\ rank\ of\ the\ name\ in\ the\ file\ for\ the\ given\ gender,\r\n\ where\ rank\ 1\ is\ the\ name\ with\ the\ largest\ number\ of\ births.\r\n\r\n\ @param\ year\r\n\ @param\ name\r\n\ @param\ gender\r\n
comment3.params=year\ rank\ gender
comment3.target=java.lang.String\ getName(int,\ int,\ java.lang.String)
comment3.text=\r\n\ This\ method\ returns\ the\ name\ of\ the\ person\ in\ the\ file\ at\ this\ rank,\ for\ the\ given\ gender,\r\n\ where\ rank\ 1\ is\ the\ name\ with\ the\ largest\ number\ of\ births.\r\n\ If\ the\ rank\ does\ not\ exist\ in\ the\ file,\ then\ \u201CNO\ NAME\uFFFD?\ is\ returned.\r\n\r\n\ @param\ year\r\n\ @param\ rank\r\n\ @param\ gender\r\n\ @return\r\n\ @throws\ IOException\r\n
comment4.params=name\ year\ newYear\ gender
comment4.target=void\ whatIsNameInYear(java.lang.String,\ int,\ int,\ java.lang.String)
comment4.text=\r\n\ This\ method\ determines\ what\ name\ would\ have\ been\ named\ if\ they\ were\ born\ in\ a\ different\ year,\r\n\ based\ on\ the\ same\ popularity.\r\n\r\n\ @param\ name\r\n\ @param\ year\ \ \ \ representing\ the\ year\ that\ name\ was\ born\r\n\ @param\ newYear\r\n\ @param\ gender\r\n
comment5.params=name\ gender
comment5.target=int\ yearOfHighestRank(java.lang.String,\ java.lang.String)
comment5.text=\r\n\ This\ method\ selects\ a\ range\ of\ files\ to\ process\ and\ returns\ an\ integer,\r\n\ the\ year\ with\ the\ highest\ rank\ for\ the\ name\ and\ gender\r\n\r\n\ @param\ name\r\n\ @param\ gender\r\n
comment6.params=name\ gender
comment6.target=java.lang.Double\ getAverageRank(java.lang.String,\ java.lang.String)
comment7.params=year\ name\ gender
comment7.target=java.lang.Integer\ getTotalBirthsRankedHigher(int,\ java.lang.String,\ java.lang.String)
comment7.text=\r\n\ This\ method\ returns\ an\ integer,\ the\ total\ number\ of\ births\ of\ those\ names\r\n\ with\ the\ same\ gender\ and\ same\ year\ who\ are\ ranked\ higher\ than\ name\r\n\r\n\ @param\ year\r\n\ @param\ name\r\n\ @param\ gender\r\n
comment8.params=year
comment8.target=org.apache.commons.csv.CSVParser\ getFileParser(int)
comment9.params=name\ gender
comment9.target=java.util.Map\ getAllYearsByNameAndGender(java.lang.String,\ java.lang.String)
numComments=10
