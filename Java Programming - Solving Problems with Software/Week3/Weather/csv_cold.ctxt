#BlueJ class context
comment0.target=csv_cold
comment0.text=\r\n\ Write\ a\ description\ of\ csv_cold\ here.\r\n\ \r\n\ @author\ (your\ name)\ \r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=arg
comment1.target=void\ main(java.lang.String[])
comment10.params=parser
comment10.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInFile(org.apache.commons.csv.CSVParser)
comment11.params=
comment11.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInManyFiles()
comment12.params=lowest\ record
comment12.target=org.apache.commons.csv.CSVRecord\ leasthumid(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord)
comment13.params=parser
comment13.target=double\ averageTemperatureInFile(org.apache.commons.csv.CSVParser)
comment14.params=parser\ value
comment14.target=double\ averageTemperatureWithHighHumidityInFile(org.apache.commons.csv.CSVParser,\ int)
comment2.params=
comment2.target=void\ testColdestHourInFile()
comment3.params=
comment3.target=void\ testFileWithColdestTemperature()
comment4.params=
comment4.target=void\ testLowestHumidityInFile()
comment5.params=
comment5.target=void\ testaverageTemperatureInFile()
comment6.params=
comment6.target=void\ testaverageTempwithHighHumidityInFile()
comment7.params=
comment7.target=java.lang.String\ fileWithColdestTemperature()
comment8.params=parser
comment8.target=org.apache.commons.csv.CSVRecord\ coldestHourInFile(org.apache.commons.csv.CSVParser)
comment9.params=lowest\ record
comment9.target=org.apache.commons.csv.CSVRecord\ coldest(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord)
numComments=15
